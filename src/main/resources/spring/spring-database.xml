<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd"
       default-lazy-init="false">

    <bean id="dataSource" class="com.jolbox.bonecp.BoneCPDataSource" destroy-method="close" lazy-init="false">
        <property name="driverClass" value="${database.driverClass}"/>
        <property name="jdbcUrl" value="${database.jdbcUrl}"/>
        <property name="username" value="${database.username}"/>
        <property name="password" value="${database.password}"/>
        <property name="idleConnectionTestPeriodInSeconds" value="${database.idleConnectionTestPeriodInSeconds}"/>
        <property name="idleMaxAgeInSeconds" value="${database.idleMaxAge.seconds}"/>
        <property name="maxConnectionsPerPartition" value="${database.maxConnectionsPerPartition}"/>
        <property name="minConnectionsPerPartition" value="${database.minConnectionsPerPartition}"/>
        <property name="partitionCount" value="${database.partitionCount}"/>
        <property name="acquireIncrement" value="${database.acquireIncrement}"/>
        <property name="connectionTestStatement" value="select 1"/>
        <property name="statementsCacheSize" value="${database.statementsCacheSize}"/>
        <property name="releaseHelperThreads" value="${database.releaseHelperThreads}"/>
        <property name="logStatementsEnabled" value="${database.logStatementsEnabled}"/>
        <property name="connectionTimeoutInMs" value="${database.connectionTimeoutInMs}"/>
        <property name="maxConnectionAgeInSeconds" value="${database.maxConnectionAgeInSeconds}"/>
        <property name="statisticsEnabled" value="${database.statisticsEnabled}"/>
        <property name="lazyInit" value="${database.lazyInit}"/>
        <property name="defaultAutoCommit" value="${database.defaultAutoCommit}"/>
        <property name="disableJMX" value="${database.disableJMX}"/>
    </bean>

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="configLocation" value="classpath:mybatis/mybatis-config.xml"/>
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg ref="sqlSessionFactory"/>
    </bean>

    <bean name="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!-- 配置那些类的方法进行事务管理 -->
    <aop:config>
        <aop:pointcut id="allManagerMethod" expression="execution (* com.jxnu.finance.*..*.*(..))" />
        <aop:advisor advice-ref="userTxAdvice" pointcut-ref="allManagerMethod" />
    </aop:config>

    <tx:advice id="userTxAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="delete*" propagation="REQUIRED" read-only="false"
                       rollback-for="java.lang.Exception" no-rollback-for="java.lang.Exception"/>
            <tx:method name="add*" propagation="REQUIRED" read-only="false"
                       rollback-for="java.lang.Exception"/>
            <tx:method name="create*" propagation="REQUIRED" read-only="false"
                       rollback-for="java.lang.Exception"/>
            <tx:method name="insert*" propagation="REQUIRED" read-only="false"
                       rollback-for="java.lang.Exception"/>
            <tx:method name="update*" propagation="REQUIRED" read-only="false"
                       rollback-for="java.lang.Exception"/>
            <tx:method name="edit*" propagation="REQUIRED" read-only="false"
                       rollback-for="java.lang.Exception"/>
            <tx:method name="modify*" propagation="REQUIRED" read-only="false"
                       rollback-for="java.lang.Exception"/>
            <tx:method name="update*" propagation="REQUIRED" read-only="false"
                       rollback-for="java.lang.Exception"/>

            <tx:method name="find*" propagation="SUPPORTS" read-only="true"/>
            <tx:method name="query*" propagation="SUPPORTS" read-only="true"/>
            <tx:method name="get*" propagation="SUPPORTS" read-only="true"/>
            <tx:method name="select*" propagation="SUPPORTS" read-only="true"/>
        </tx:attributes>
    </tx:advice>

</beans>
